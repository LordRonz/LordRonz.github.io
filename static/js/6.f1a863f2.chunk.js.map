{"version":3,"sources":["../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/404.tsx"],"names":["GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","lg","md","sm","xl","xs","zeroMinWidth","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","children","NotFoundPage","id","justifyContent","in","style","transitionDelay","variant","fontWeight","startDelay","avgTypingDelay","to"],"mappings":"mNAWeA,MANkBC,kB,0BCJ1B,SAASC,EAAoBC,GAClC,OAAOC,YAAqB,UAAWD,GAEzC,IAGME,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAMtDC,EALKC,YAAuB,UAAD,CAAa,OAAQ,YAAa,OAAQ,gBAA1C,mBAJzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAKpCC,KAAI,SAAAC,GAAO,2BAAkBA,OADC,YAHvB,CAAC,iBAAkB,SAAU,cAAe,OAKjDD,KAAI,SAAAE,GAAS,6BAAoBA,OAFL,YAF5B,CAAC,SAAU,eAAgB,QAKhCF,KAAI,SAAAG,GAAI,wBAAeA,OAHU,YAIvCN,EAAWG,KAAI,SAAAI,GAAI,wBAAeA,OAJK,YAIOP,EAAWG,KAAI,SAAAI,GAAI,wBAAeA,OAJzC,YAIqDP,EAAWG,KAAI,SAAAI,GAAI,wBAAeA,OAJvF,YAImGP,EAAWG,KAAI,SAAAI,GAAI,wBAAeA,OAJrI,YAIiJP,EAAWG,KAAI,SAAAI,GAAI,wBAAeA,S,OCVvNC,EAAY,CAAC,YAAa,UAAW,gBAAiB,YAAa,YAAa,YAAa,OAAQ,KAAM,KAAM,aAAc,KAAM,UAAW,OAAQ,KAAM,KAAM,gBAuB1K,SAASC,EAAUC,GACjB,IAAMC,EAAQC,WAAWF,GACzB,gBAAUC,GAAV,OAAkBE,OAAOH,GAAKI,QAAQD,OAAOF,GAAQ,KAAO,MAuK9D,IAAMI,EAAWC,YAAO,MAAO,CAC7BC,KAAM,UACNnB,KAAM,OACNoB,kBAAmB,SAACC,EAAOC,GAAW,MAahCD,EAAME,WAXRC,EAFkC,EAElCA,UACAjB,EAHkC,EAGlCA,UACAkB,EAJkC,EAIlCA,KACAC,EALkC,EAKlCA,GACAC,EANkC,EAMlCA,GACAC,EAPkC,EAOlCA,GACAtB,EARkC,EAQlCA,QACAE,EATkC,EASlCA,KACAqB,EAVkC,EAUlCA,GACAC,EAXkC,EAWlCA,GACAC,EAZkC,EAYlCA,aAEF,MAAO,CAACT,EAAOU,KAAMR,GAAaF,EAAOE,UAAWC,GAAQH,EAAOG,KAAMM,GAAgBT,EAAOS,aAAcP,GAAyB,IAAZlB,GAAiBgB,EAAO,cAAD,OAAeP,OAAOT,KAA2B,QAAdC,GAAuBe,EAAO,gBAAD,OAAiBP,OAAOR,KAAwB,SAATC,GAAmBc,EAAO,WAAD,OAAYP,OAAOP,MAAiB,IAAPsB,GAAgBR,EAAO,WAAD,OAAYP,OAAOe,MAAe,IAAPF,GAAgBN,EAAO,WAAD,OAAYP,OAAOa,MAAe,IAAPD,GAAgBL,EAAO,WAAD,OAAYP,OAAOY,MAAe,IAAPD,GAAgBJ,EAAO,WAAD,OAAYP,OAAOW,MAAe,IAAPG,GAAgBP,EAAO,WAAD,OAAYP,OAAOc,QAjB/gBX,EAmBd,gBACDK,EADC,EACDA,WADC,OAEGU,YAAS,CACbC,UAAW,cACVX,EAAWC,WAAa,CACzBW,QAAS,OACTC,SAAU,OACVC,MAAO,QACNd,EAAWE,MAAQ,CACpBa,OAAQ,GAEPf,EAAWQ,cAAgB,CAC5BQ,SAAU,GACW,WAApBhB,EAAWf,MAAqB,CACjC4B,SAAU,UACW,YAApBb,EAAWf,MAAsB,CAClC4B,SAAU,oBAxIL,YAGJ,IAFDI,EAEC,EAFDA,MACAjB,EACC,EADDA,WAEMkB,EAAkBC,YAAwB,CAC9CC,OAAQpB,EAAWhB,UACnBqC,YAAaJ,EAAMI,YAAYD,SAEjC,OAAOE,YAAkB,CACvBL,SACCC,GAAiB,SAAAK,GAClB,IAAMC,EAAS,CACbC,cAAeF,GASjB,OANoC,IAAhCA,EAAUG,QAAQ,YACpBF,EAAO,QAAD,OAAS5C,EAAYsB,OAAU,CACnCyB,SAAU,SAIPH,QAGJ,YAGJ,IAFDP,EAEC,EAFDA,MACAjB,EACC,EADDA,WAGEC,EAEED,EAFFC,UACA2B,EACE5B,EADF4B,WAEE7B,EAAS,GAEb,GAAIE,GAA4B,IAAf2B,EAAkB,CACjC,IAAMC,EAAmBV,YAAwB,CAC/CC,OAAQQ,EACRP,YAAaJ,EAAMI,YAAYD,SAEjCrB,EAASuB,YAAkB,CACzBL,SACCY,GAAkB,SAAAN,GACnB,IAAMO,EAAeb,EAAMlC,QAAQwC,GAEnC,MAAqB,QAAjBO,EACF,aACEC,UAAW,IAAF,OAAM3C,EAAU0C,KAD3B,eAEWlD,EAAYsB,MAAS,CAC5B8B,WAAY5C,EAAU0C,KAKrB,MAIX,OAAO/B,KAEF,YAGJ,IAFDkB,EAEC,EAFDA,MACAjB,EACC,EADDA,WAGEC,EAEED,EAFFC,UACAgC,EACEjC,EADFiC,cAEElC,EAAS,GAEb,GAAIE,GAA+B,IAAlBgC,EAAqB,CACpC,IAAMC,EAAsBf,YAAwB,CAClDC,OAAQa,EACRZ,YAAaJ,EAAMI,YAAYD,SAEjCrB,EAASuB,YAAkB,CACzBL,SACCiB,GAAqB,SAAAX,GACtB,IAAMO,EAAeb,EAAMlC,QAAQwC,GAEnC,MAAqB,QAAjBO,EACF,aACEhB,MAAO,eAAF,OAAiB1B,EAAU0C,GAA3B,KACLK,WAAY,IAAF,OAAM/C,EAAU0C,KAF5B,eAGWlD,EAAYsB,MAAS,CAC5BkC,YAAahD,EAAU0C,KAKtB,MAIX,OAAO/B,KA4CiD,gBACxDkB,EADwD,EACxDA,MACAjB,EAFwD,EAExDA,WAFwD,OAGpDiB,EAAMI,YAAYgB,KAAKC,QAAO,SAACC,EAAcC,GAGjD,OA9MF,SAAsBD,EAActB,EAAOuB,EAAYxC,GACrD,IAAMd,EAAOc,EAAWwC,GAExB,GAAKtD,EAAL,CAIA,IAAIa,EAAS,GAEb,IAAa,IAATb,EAEFa,EAAS,CACP0C,UAAW,EACXC,SAAU,EACVf,SAAU,aAEP,GAAa,SAATzC,EACTa,EAAS,CACP0C,UAAW,OACXC,SAAU,EACVC,WAAY,EACZhB,SAAU,OACVb,MAAO,YAEJ,CACL,IAAM8B,EAA0BzB,YAAwB,CACtDC,OAAQpB,EAAW6C,QACnBxB,YAAaJ,EAAMI,YAAYD,SAE3B0B,EAAiD,kBAA5BF,EAAuCA,EAAwBJ,GAAcI,EAElG9B,EAAQ,GAAH,OAAMiC,KAAKC,MAAM9D,EAAO4D,EAAc,KAAQ,IAA9C,KACPG,EAAO,GAEX,GAAIjD,EAAWC,WAAaD,EAAWE,MAAqC,IAA7BF,EAAWiC,cAAqB,CAC7E,IAAMH,EAAeb,EAAMlC,QAAQiB,EAAWiC,eAE9C,GAAqB,QAAjBH,EAAwB,CAC1B,IAAMoB,EAAY,QAAH,OAAWpC,EAAX,cAAsB1B,EAAU0C,GAAhC,KACfmB,EAAO,CACLR,UAAWS,EACXvB,SAAUuB,IAOhBnD,EAASW,YAAS,CAChB+B,UAAW3B,EACX4B,SAAU,EACVf,SAAUb,GACTmC,GAIwC,IAAzChC,EAAMI,YAAYD,OAAOoB,GAC3BW,OAAOC,OAAOb,EAAcxC,GAE5BwC,EAAatB,EAAMI,YAAYgC,GAAGb,IAAezC,GAkJnDuD,CAAaf,EAActB,EAAOuB,EAAYxC,GACvCuC,IACN,OAuBGgB,EAAoBhF,cAAiB,SAAciF,EAASC,GAChE,IAmDkBC,EAnDZC,EAAaC,YAAc,CAC/B9D,MAAO0D,EACP5D,KAAM,YAEFE,EAAQ+D,YAAaF,GAGzBG,EAgBEhE,EAhBFgE,UACSC,EAePjE,EAfF+C,QACemB,EAcblE,EAdFmC,cAVmE,EAwBjEnC,EAbFmE,iBAXmE,MAWvD,MAXuD,IAwBjEnE,EAZFG,iBAZmE,WAwBjEH,EAXFd,iBAbmE,MAavD,MAbuD,IAwBjEc,EAVFI,YAdmE,WAwBjEJ,EATFK,UAfmE,WAwBjEL,EARFM,UAhBmE,SAiBvD8D,EAOVpE,EAPF8B,WAjBmE,EAwBjE9B,EANFO,UAlBmE,WAwBjEP,EALFf,eAnBmE,MAmBzD,EAnByD,IAwBjEe,EAJFb,YApBmE,MAoB5D,OApB4D,IAwBjEa,EAHFQ,UArBmE,WAwBjER,EAFFS,UAtBmE,WAwBjET,EADFU,oBAvBmE,SAyB/D2D,EAAQC,YAA8BtE,EAAOX,GAE7CyC,EAAasC,GAAkBnF,EAC/BkD,EAAgB+B,GAAqBjF,EACrCsF,EAAiB9F,aAAiBD,GAGlCuE,EAAUkB,GAAeM,GAAkB,GAE3CrE,EAAaU,YAAS,GAAIZ,EAAO,CACrC+C,UACA5C,YACAjB,YACAkB,OACAC,KACAC,KACAC,KACAuB,aACAK,gBACAhD,OACAqB,KACAC,KACAC,iBAGI8D,EAvEkB,SAAAtE,GAAc,IAEpCsE,EAYEtE,EAZFsE,QACArE,EAWED,EAXFC,UACAjB,EAUEgB,EAVFhB,UACAkB,EASEF,EATFE,KACAC,EAQEH,EARFG,GACAC,EAOEJ,EAPFI,GACAC,EAMEL,EANFK,GACAtB,EAKEiB,EALFjB,QACAE,EAIEe,EAJFf,KACAqB,EAGEN,EAHFM,GACAC,EAEEP,EAFFO,GAGIgE,EAAQ,CACZ9D,KAAM,CAAC,OAAQR,GAAa,YAAaC,GAAQ,OAF/CF,EADFQ,cAGyE,eAAgBP,GAAyB,IAAZlB,GAAb,qBAA4CS,OAAOT,IAA0B,QAAdC,GAAA,uBAAuCQ,OAAOR,IAAuB,SAATC,GAAA,kBAA8BO,OAAOP,KAAgB,IAAPsB,GAAA,kBAA2Bf,OAAOe,KAAc,IAAPF,GAAA,kBAA2Bb,OAAOa,KAAc,IAAPD,GAAA,kBAA2BZ,OAAOY,KAAc,IAAPD,GAAA,kBAA2BX,OAAOW,KAAc,IAAPG,GAAA,kBAA2Bd,OAAOc,MAE1c,OAAOkE,YAAeD,EAAO/F,EAAqB8F,GAqDlCG,CAAkBzE,GAOlC,OALkB0D,EAKagB,cAAKhF,EAAUgB,YAAS,CACrDV,WAAYA,EACZ8D,UAAWa,YAAKL,EAAQ7D,KAAMqD,GAC9Bc,GAAIX,EACJR,IAAKA,GACJU,IAVsC,KAAZtB,EAA8B6B,cAAKpG,EAAYuG,SAAU,CACpFC,MAAOjC,EACPkC,SAAUrB,IACPA,KA8KQH,O,iCCzef,8FAiDeyB,UAzCM,kBACnB,qCACE,cAAC,IAAD,UACE,gEAEF,sBAAMlB,UAAU,0CAAhB,SACE,eAAC,IAAD,CAAM7D,WAAS,EAAC6D,UAAU,uEAAuEmB,GAAG,OAApG,UACE,cAAC,IAAD,CAAM/E,MAAI,EAACK,GAAI,GAAf,SACE,cAAC,IAAD,CAAMN,WAAS,EAACiF,eAAe,SAA/B,SACE,cAAC,IAAD,CAAMC,IAAE,EAACC,MAAO,CAAEC,gBAAiB,SAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,QAAQ,KAAKrB,UAAU,KAAKH,UAAU,aAAlD,SACE,cAAC,IAAD,CAAKyB,WAAW,iBAAhB,mBAEF,cAAC,IAAD,CACED,QAAQ,KACRrB,UAAU,KACVH,UAAU,gBAHZ,SAKE,cAAC,IAAD,CAAQ0B,WAAY,IAAKC,eAAgB,GAAzC,uCAQV,cAAC,IAAD,CAAMvF,MAAI,EAACgF,eAAe,SAA1B,SACE,cAAC,IAAD,CAAYI,QAAQ,KAAKrB,UAAU,KAAKH,UAAU,aAAlD,SACE,cAAC,IAAD,CAAKyB,WAAW,iBAAhB,SACE,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,sBAAM5B,UAAU,0BAAhB","file":"static/js/6.f1a863f2.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import {\n  Box, Grid, Typography, Zoom,\n} from '@mui/material';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport Typist from 'react-typist';\n\nconst NotFoundPage = (): JSX.Element => (\n  <>\n    <Helmet>\n      <title>Page not found | LordRonz</title>\n    </Helmet>\n    <main className=\"text-lrtext-white bg-gray-900 body-font\">\n      <Grid container className=\"flex-grow h-screen items-center text-center bg-mblack justify-center\" id=\"home\">\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\">\n            <Zoom in style={{ transitionDelay: '200ms' }}>\n              <Grid>\n                <Typography variant=\"h1\" component=\"h1\" className=\"text-lrred\">\n                  <Box fontWeight=\"fontWeightBold\">404</Box>\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  component=\"h2\"\n                  className=\"text-lrrwhite\"\n                >\n                  <Typist startDelay={300} avgTypingDelay={80}>\n                    Page Not Found\n                  </Typist>\n                </Typography>\n              </Grid>\n            </Zoom>\n          </Grid>\n        </Grid>\n        <Grid item justifyContent=\"center\">\n          <Typography variant=\"h6\" component=\"h3\" className=\"text-lrred\">\n            <Box fontWeight=\"fontWeightBold\">\n              <Link to=\"/\">\n                <span className=\"animated-underline link\">Back to Home</span>\n              </Link>\n            </Box>\n          </Typography>\n        </Grid>\n      </Grid>\n    </main>\n  </>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}