{"version":3,"sources":["components/Home.module.css","assets/steph.jpg","components/MeButton.tsx","components/ParticleComponent.tsx","components/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ButtonRoot","React","props","ref","children","other","width","height","points","className","x","y","CustomButtonRoot","styled","theme","palette","mode","buttonUnstyledClasses","focusVisible","active","SvgButton","ButtonUnstyled","component","UnstyledButtonCustom","ele","ParticleComponent","id","options","background","color","value","fpsLimit","interactivity","detectsOn","events","onClick","enable","onHover","parallax","force","smooth","resize","modes","bubble","distance","duration","opacity","size","grab","links","blink","consent","push","quantity","repulse","particles","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","Container","div","TextContainer","meTitles","Home","useState","isChanged","setIsChanged","index","setIndex","meTypist","avgTypingDelay","onTypingDone","length","Backspace","count","delay","useEffect","style","home","Zoom","in","transitionDelay","Typography","variant","Box","fontWeight","alt","src","hero","to","About","lazy","Footer","App","Helmet","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8325b0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__9Mejl\"};","export default __webpack_public_path__ + \"static/media/steph.2be48af6.jpg\";","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable @typescript-eslint/ban-types */\nimport ButtonUnstyled, {\n  buttonUnstyledClasses,\n  ButtonUnstyledProps,\n} from '@mui/core/ButtonUnstyled';\nimport { styled, Theme } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst ButtonRoot = React.forwardRef((\n  props: React.PropsWithChildren<{}>,\n  ref: React.ForwardedRef<any>,\n) => {\n  const { children, ...other } = props;\n\n  return (\n    <svg width=\"150\" height=\"50\" {...other} ref={ref}>\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"bg\" />\n      <polygon points=\"0,50 0,0 150,0 150,50\" className=\"borderEffect\" />\n      <foreignObject x=\"0\" y=\"0\" width=\"150\" height=\"50\">\n        <div className=\"content\">{children}</div>\n      </foreignObject>\n    </svg>\n  );\n});\n\nconst CustomButtonRoot = styled(ButtonRoot)(\n  ({ theme }: { theme: Theme }) => `\n  overflow: visible;\n  cursor: pointer;\n  --main-color: ${\n  theme.palette.mode === 'light' ? 'rgb(235,39,84)' : 'rgb(235,39,84)'\n};\n  --hover-color: ${\n  theme.palette.mode === 'light'\n    ? 'rgba(255,0,255,0.2)'\n    : 'rgba(144,202,249,0.08)'\n};\n  --active-color: ${\n  theme.palette.mode === 'light'\n    ? 'rgba(25,118,210,0.12)'\n    : 'rgba(144,202,249,0.24)'\n};\n\n  & polygon {\n    fill: transparent;\n    transition: all 800ms ease;\n    pointer-events: none;\n  }\n\n  & .bg {\n    stroke: var(--main-color);\n    stroke-width: 0.5;\n    filter: drop-shadow(0 4px 20px rgba(0, 0, 0, 0.1));\n    fill: transparent;\n  }\n\n  & .borderEffect {\n    stroke: var(--main-color);\n    stroke-width: 2;\n    stroke-dasharray: 150 600;\n    stroke-dashoffset: 150;\n    fill: transparent;\n  }\n\n  &:hover,\n  &.${buttonUnstyledClasses.focusVisible} {\n    .borderEffect {\n      stroke-dashoffset: -600;\n    }\n\n    .bg {\n      fill: var(--hover-color);\n    }\n  }\n\n  &:focus,\n  &.${buttonUnstyledClasses.focusVisible} {\n    outline: none;\n  }\n\n  &.${buttonUnstyledClasses.active} {\n    & .bg {\n      fill: var(--active-color);\n      transition: fill 300ms ease-out;\n    }\n  }\n\n  & foreignObject {\n    pointer-events: none;\n\n    & .content {\n      font-family: Helvetica, Inter, Arial, sans-serif;\n      font-size: 14px;\n      font-weight: 200;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--main-color);\n      text-transform: uppercase;\n    }\n\n    & svg {\n      margin: 0 5px;\n    }\n  }`,\n);\n\nconst SvgButton = React.forwardRef((\n  props: ButtonUnstyledProps,\n  ref: React.ForwardedRef<any>,\n) => <ButtonUnstyled {...props} component={CustomButtonRoot} ref={ref} />);\n\nexport default function UnstyledButtonCustom(\n  props: { ele: React.ReactNode },\n): JSX.Element {\n  const { ele } = props;\n  return <SvgButton>{ele}</SvgButton>;\n}\n\nUnstyledButtonCustom.propTypes = {\n  ele: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport Particles from 'react-tsparticles';\n\nconst ParticleComponent = (): JSX.Element => (\n  <div className=\"absolute top-0 left-0 w-full\">\n    <Particles\n      id=\"tsparticles\"\n      className=\"w-full h-screen\"\n      options={{\n        background: {\n          color: {\n            value: 'transparent',\n          },\n        },\n        fpsLimit: 60,\n        interactivity: {\n          detectsOn: 'canvas',\n          events: {\n            onClick: {\n              enable: true,\n              mode: 'repulse',\n            },\n            onHover: {\n              enable: true,\n              mode: 'grab',\n              parallax: {\n                enable: true,\n                force: 15,\n                smooth: 10,\n              },\n            },\n            resize: true,\n          },\n          modes: {\n            bubble: {\n              distance: 400,\n              duration: 2,\n              opacity: 0.8,\n              size: 40,\n            },\n            grab: {\n              links: {\n                blink: true,\n                color: '#6cff47',\n                consent: true,\n                opacity: 1,\n              },\n              distance: 169,\n            },\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: '#ff4655',\n          },\n          links: {\n            color: '#ffffff',\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1,\n          },\n          collisions: {\n            enable: false,\n          },\n          move: {\n            direction: 'none',\n            enable: true,\n            outMode: 'bounce',\n            random: false,\n            speed: 3,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n            value: 30,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: 'triangle',\n          },\n          size: {\n            random: true,\n            value: 5,\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  </div>\n);\n\nexport default ParticleComponent;\n","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Box, Typography, Zoom } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-scroll';\nimport Typist from 'react-typist';\nimport styled from 'styled-components';\n\nimport hero from '../assets/steph.jpg';\nimport style from './Home.module.css';\nimport UnstyledButtonCustom from './MeButton';\nimport ParticleComponent from './ParticleComponent';\n\nconst Container = styled.div`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100vh;\n  display: flex;\n  padding: 5rem 2.25rem;\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst TextContainer = styled.div`\n  @media (min-width: 1024px) {\n    flex-grow: 1;\n    padding-right: 6rem;\n  }\n  @media (min-width: 768px) {\n    width: 50%;\n    padding-right: 4rem;\n    align-items: flex-start;\n    text-align: left;\n  }\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 4rem;\n  @media (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n  align-items: center;\n  text-align: center;\n  z-index: 10;\n`;\n\nconst meTitles = [\n  'Undergraduate Student',\n  'Wee',\n  'Web Developer',\n  'Backend Engineer',\n  'Python Enthusiast',\n];\n\nconst Home = (): JSX.Element => {\n  const [isChanged, setIsChanged] = useState(true);\n  const [index, setIndex] = useState(0);\n\n  const meTypist = (\n    <Typist\n      avgTypingDelay={60}\n      onTypingDone={() => {\n        setIndex(index + 1 < meTitles.length ? index + 1 : 0);\n        setIsChanged(false);\n      }}\n    >\n      {meTitles[index]}\n      <Typist.Backspace\n        count={meTitles[index]?.length}\n        delay={500}\n      />\n    </Typist>\n  );\n\n  useEffect(() => {\n    setIsChanged(true);\n  }, [isChanged]);\n\n  return (\n    <section id=\"home\" className={style.home}>\n      <ParticleComponent />\n      <Container>\n        <Zoom in style={{ transitionDelay: '200ms' }}>\n          <TextContainer>\n            <Typography variant=\"h3\" component=\"h2\">\n              <Box fontWeight=\"fontWeightBold\">\n                Hi, I&apos;m\n                {' '}\n                <span style={{ color: '#eb2754' }}>Aaron</span>\n                .\n              </Box>\n            </Typography>\n            <Typography variant=\"h6\" component=\"h4\">\n              {isChanged ? meTypist : null}\n            </Typography>\n          </TextContainer>\n        </Zoom>\n        <div className=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6 flex justify-center\">\n          <figure className=\"w-36 md:w-52 z-10\">\n            <img\n              className=\"object-cover object-center rounded\"\n              alt=\"hero\"\n              src={hero}\n              width=\"300\"\n              height=\"465\"\n            />\n          </figure>\n        </div>\n      </Container>\n      <div className=\"absolute bottom-0 left-1/2 text-3xl transform -translate-y-1/2 -translate-x-1/2\">\n        <Link to=\"about\" smooth>\n          <UnstyledButtonCustom ele={(\n            <span>\n              <Typography>\n                <Box fontWeight=\"fontWeightBold\">\n                  <ExpandMoreIcon />\n                  LESGO\n                </Box>\n              </Typography>\n            </span>\n          )}\n          />\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import './App.css';\nimport './styles/globals.css';\n\nimport React, { Suspense } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport Home from './components/Home';\n\nconst About = React.lazy(() => import('./components/About'));\nconst Footer = React.lazy(() => import('./components/Footer'));\n\nconst App = (): JSX.Element => (\n  <div className=\"App text-gray-400 bg-gray-900 body-font\">\n    <Helmet>\n      <title>Aaron Christopher</title>\n    </Helmet>\n    <Home />\n    <Suspense fallback={<div>Loading...</div>}>\n      <About />\n      <Footer />\n    </Suspense>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}